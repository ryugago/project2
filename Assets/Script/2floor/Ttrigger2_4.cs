using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Ttrigger2_4 : MonoBehaviour
{

    private bool trigger1;
    private bool trigger2 = true;

    public GameObject open_img;
    public TMPro.TMP_Text interac;
    public TMPro.TMP_Text quest;


    public TMPro.TMP_Text ChatText; // 실제 채팅이 나오는 텍스트
    public float delayTime;
    public float autoProceedDelay = 3f;

    public List<KeyCode> skipButton; // 대화를 빠르게 넘길 수 있는 키

    public string writerText = "";

    bool isButtonClicked = false;

    public bool nextTrigger = false;

    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        if (trigger1 && trigger2)
        {
            open_img.SetActive(true);
            if (Input.GetKeyDown(KeyCode.E))
            {
                trigger2 = false;
                interac.text = "열리지 않습니다";
                StartCoroutine(TextPractice());
            }
        }
    }

    IEnumerator NormalChat(string narration)
    {
        int a = 0;
        writerText = "";

        //텍스트 타이핑 효과
        for (a = 0; a < narration.Length; a++)
        {
            writerText += narration[a];
            ChatText.text = writerText;
            yield return new WaitForSeconds(delayTime); // delayTime만큼 대기
            if (isButtonClicked)
            {
                ChatText.text = narration;
                a = narration.Length; // 버튼 눌리면 그냥 다 출력하게 함
                isButtonClicked = false;
            }
        }
        //yield return new WaitForSeconds(autoProceedDelay);


        float timer = 0f;
        while (timer < autoProceedDelay)
        {

            if (isButtonClicked)
            {
                isButtonClicked = false;
                break;
            }
            timer += Time.deltaTime;
            yield return null;
        }
    }

    IEnumerator TextPractice()
    {
        GameManager.onlycamera = false;
        yield return StartCoroutine(NormalChat("문이 왜이래!!"));
        yield return StartCoroutine(NormalChat("문이 열리지 않아"));
        autoProceedDelay = 0.1f;
        yield return StartCoroutine(NormalChat(" "));
        quest.text = "뒤쪽 창문쪽으로 가보자";
        GameManager.onlycamera = true;
        yield return new WaitForSeconds(1f);
        nextTrigger = true;
        quest.text = " ";
    }

    private void OnTriggerEnter(Collider other)
    {
        if (other.tag == "ViewPoint")
        {
            trigger1 = true;
        }
    }
    private void OnTriggerExit(Collider other)
    {
        if (other.tag == "ViewPoint")
        {
            open_img.SetActive(false);
            trigger1 = false;
        }
    }
}
