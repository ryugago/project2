using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class incustmerroomchat : MonoBehaviour
{
    public TMPro.TMP_Text ChatText; // 실제 채팅이 나오는 텍스트
    public float delayTime;
    public float autoProceedDelay = 3f;

    public List<KeyCode> skipButton; // 대화를 빠르게 넘길 수 있는 키

    public string writerText = "";

    bool isButtonClicked = false;

    public bool cutomertrigger = false;
    public TMPro.TMP_Text quest;

    public Animator Ccamera;


    public GameObject Player;
    public PlayerController Maincamera;
    public GameObject PMaincamera;

    public Quaternion Protation;
    public Vector3 Pposition;

    void Start()
    {
        StartCoroutine(TextPractice());
    }

    private void Update()
    {
        foreach (var element in skipButton) // 버튼 검사
        {
            if (Input.GetKeyDown(element))
            {
                isButtonClicked = true;
            }
        }
    }

    IEnumerator MovePlayerToPosition(Transform playerTransform, Vector3 targetPosition, Quaternion targetRotation, float duration)
    {
        Vector3 startPosition = playerTransform.position;
        Quaternion startRotation = playerTransform.rotation;
        float elapsedTime = 0f;

        while (elapsedTime < duration)
        {
            //playerTransform.position = Vector3.Lerp(startPosition, targetPosition, elapsedTime / duration);
            playerTransform.rotation = Quaternion.Lerp(startRotation, targetRotation, elapsedTime / duration);
            elapsedTime += Time.deltaTime;
            yield return null;
        }

        //playerTransform.position = targetPosition;
        playerTransform.rotation = targetRotation;
    }


    // Start is called before the first frame update
    IEnumerator NormalChat(string narration)
    {
        int a = 0;
        writerText = "";

        //텍스트 타이핑 효과
        for (a = 0; a < narration.Length; a++)
        {
            writerText += narration[a];
            ChatText.text = writerText;
            yield return new WaitForSeconds(delayTime); // delayTime만큼 대기
            if (isButtonClicked)
            {
                ChatText.text = narration;
                a = narration.Length; // 버튼 눌리면 그냥 다 출력하게 함
                isButtonClicked = false;
            }
        }
        //yield return new WaitForSeconds(autoProceedDelay);


        float timer = 0f;
        while (timer < autoProceedDelay)
        {

            if (isButtonClicked)
            {
                isButtonClicked = false;
                break;
            }
            timer += Time.deltaTime;
            yield return null;
        }
    }

    IEnumerator TextPractice()
    {
        GameManager.canPlayerMove2 = false;
        autoProceedDelay = 3f;
        //Ccamera.SetTrigger("close");

        Maincamera.SetCameraRotationX(0);
        PMaincamera.transform.localRotation = Quaternion.Euler(0, 0, 0);
        StartCoroutine(MovePlayerToPosition(Player.transform, Pposition, Protation, 2f));

        yield return StartCoroutine(NormalChat(" "));
        autoProceedDelay = 3f;
        yield return StartCoroutine(NormalChat("어..어..문이..."));
        autoProceedDelay = 3f;
        yield return StartCoroutine(NormalChat("이런..문이 잠기다니.."));
        autoProceedDelay = 3f;
        yield return StartCoroutine(NormalChat("잠깐만.."));
        autoProceedDelay = 3f;
        yield return StartCoroutine(NormalChat("어디서 많이 본 장소같아..."));
        autoProceedDelay = 0f;
        yield return StartCoroutine(NormalChat(" "));
        quest.text = "나갈 방법을 찾아보자.";
        cutomertrigger = true;
        GameManager.canPlayerMove2 = true;
        yield return new WaitForSeconds(3f);
        quest.text = " ";

    }
}
